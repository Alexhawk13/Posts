{"version":3,"file":"js/251.f166f203.js","mappings":"6IAIA,QAAeA,EAAAA,EAAAA,GAAgB,CAC7BC,KAAM,SAENC,cAAc,EAEdC,MAAOC,EAAAA,GAEPC,MAAOC,EAAAA,GAEPC,QACE,OAAOC,EAAAA,EAAAA,KAASC,EAAAA,EAAAA,W,iBCHpBC,EAAOC,QAAU,SAAmBC,EAAWC,EAAMC,GACnD,MAAMC,OAA0C,IAAxBH,EAAUI,UAC9BJ,EAAUI,UACVJ,EAEEK,EAASF,EAAgBF,GAE/B,QAAe,IAAXI,EACFF,EAAgBF,GAAQC,OAGxB,IAAK,IAAII,KAAKJ,OACM,IAAdG,EAAOC,KACTD,EAAOC,GAAKJ,EAAMI,M,sGCvBnBC,MAAM,4C,GACTC,EAAAA,EAAAA,GAA4E,MAAxED,MAAM,+CAA8C,mBAAe,G,GAClEA,MAAM,W,WAwBR,Q,0FA1BLE,EAAAA,EAAAA,IA4BM,MA5BN,EA4BM,CA3BJC,GACAF,EAAAA,EAAAA,GAsBM,MAtBN,EAsBM,EArBJG,EAAAA,EAAAA,IAMEC,EAAA,CALAC,SAAA,G,WACSC,EAAAA,M,qCAAAA,EAAAA,MAAKC,GACdC,MAAM,aACLC,MAAOH,EAAAA,GAAGI,MAAMC,OAChB,gBAAeL,EAAAA,GAAGI,MAAME,QAAO,IAAKC,UALvC,gDAOAV,EAAAA,EAAAA,IAMEC,EAAA,CALAC,SAAA,G,WACSC,EAAAA,Y,qCAAAA,EAAAA,YAAWC,GACpBC,MAAM,mBACLC,MAAOH,EAAAA,GAAGQ,YAAYH,OACtB,gBAAeL,EAAAA,GAAGQ,YAAYF,QAAO,IAAKC,UAL7C,gDAOAV,EAAAA,EAAAA,IAMEC,EAAA,CALAC,SAAA,G,WACSC,EAAAA,S,qCAAAA,EAAAA,SAAQC,GACjBC,MAAM,YACLC,MAAOH,EAAAA,GAAGS,SAASJ,OACnB,gBAAeL,EAAAA,GAAGS,SAASH,QAAO,IAAKC,UAL1C,kDAQFV,EAAAA,EAAAA,IAECa,EAAA,CAFMjB,MAAM,8CAA+CkB,QAAOC,EAAAA,MAAnE,C,kBACG,IAAI,M,KADP,iB,kCAWJ,GACErC,KAAM,UACNsC,OACE,MAAO,CACLC,IAAIC,EAAAA,EAAAA,MACJC,QAAS,KACTZ,MAAO,GACPI,YAAa,GACbC,SAAU,GACVQ,YAAa,KACbC,kBAAmB,OAGvBC,cACE,MAAO,CACLf,MAAO,CACLgB,SADK,KAELC,WAAWA,EAAAA,EAAAA,IAAU,GACrBC,WAAWA,EAAAA,EAAAA,IAAU,KAEvBd,YAAa,CAAEY,SAAAA,EAAAA,IACfX,SAAU,CACRW,SADQ,KAERC,WAAWA,EAAAA,EAAAA,IAAU,IACrBC,WAAWA,EAAAA,EAAAA,IAAU,QAK3BC,QAAS,CACPC,eACEC,KAAKR,YAAcQ,KAAKT,QACxBS,KAAKT,QAAUU,IAAIC,gBAAgBF,KAAKT,UAG1CY,aACE,GAAIH,KAAKX,GAAGe,SACVJ,KAAKX,GAAGgB,cAGV,IACE,MAAMC,EAAU,CACd3B,MAAOqB,KAAKrB,MACZI,YAAaiB,KAAKjB,YAClBC,SAAUgB,KAAKhB,UAEXuB,QAAeP,KAAKQ,OAAOC,SAAS,aAAcH,GACxDN,KAAKU,QAAQC,KAAK,CAAE7D,KAAM,kBAAmB8D,OAAQ,CAAEC,GAAIN,KAC3D,MAAO7B,IACPoC,EAAAA,EAAAA,IAAkBpC,EAAMqC,SAAS3B,KAAKV,W,2DC/E9C,MAAMsC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,QAKA,IAAS,EAAQ,aAAc,CAACC,OAAM,SAAK,WAAO","sources":["webpack://vue-trainee/./node_modules/quasar/src/components/field/QField.js","webpack://vue-trainee/./node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js","webpack://vue-trainee/./src/views/NewPostView.vue","webpack://vue-trainee/./src/views/NewPostView.vue?30e2"],"sourcesContent":["import useField, { useFieldState, useFieldProps, useFieldEmits } from '../../composables/private/use-field.js'\n\nimport { createComponent } from '../../utils/private/create.js'\n\nexport default createComponent({\n  name: 'QField',\n\n  inheritAttrs: false,\n\n  props: useFieldProps,\n\n  emits: useFieldEmits,\n\n  setup () {\n    return useField(useFieldState())\n  }\n})\n","/**\n * Quasar runtime for auto-importing\n * components or directives.\n *\n * Warning! This file does NOT get transpiled by Babel\n * but is included into the UI code.\n *\n * @param {component} Vue Component object\n * @param {type}      One of 'components' or 'directives'\n * @param {items}     Object containing components or directives\n */\nmodule.exports = function qInstall (component, type, items) {\n  const targetComponent = component.__vccOpts !== void 0\n    ? component.__vccOpts\n    : component\n\n  const target = targetComponent[type]\n\n  if (target === void 0) {\n    targetComponent[type] = items\n  }\n  else {\n    for (var i in items) {\n      if (target[i] === void 0) {\n        target[i] = items[i]\n      }\n    }\n  }\n}\n","<template>\r\n  <div class=\"window-height flex column justify-center\">\r\n    <h5 class=\"q-ma-none q-pb-xs text-center newPostHeader\">Create new post</h5>\r\n    <div class=\"newPost\">\r\n      <q-input\r\n        autogrow\r\n        v-model=\"title\"\r\n        label=\"Post Title\"\r\n        :error=\"v$.title.$error\"\r\n        :error-message=\"v$.title.$errors[0]?.$message\"\r\n      />\r\n      <q-input\r\n        autogrow\r\n        v-model=\"description\"\r\n        label=\"Post Description\"\r\n        :error=\"v$.description.$error\"\r\n        :error-message=\"v$.description.$errors[0]?.$message\"\r\n      />\r\n      <q-input\r\n        autogrow\r\n        v-model=\"fullText\"\r\n        label=\"Post Text\"\r\n        :error=\"v$.fullText.$error\"\r\n        :error-message=\"v$.fullText.$errors[0]?.$message\"\r\n      />\r\n    </div>\r\n    <q-btn class=\"postBtn q-mt-sm q-px-xl q-py-sm self-center\" @click=\"post\"\r\n      >Post</q-btn\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport useVuelidate from '@vuelidate/core';\r\nimport { required, minLength, maxLength } from '@vuelidate/validators';\r\nimport { showDangerMessage } from '../helpers/notifications.js';\r\n\r\nexport default {\r\n  name: 'NewPost',\r\n  data() {\r\n    return {\r\n      v$: useVuelidate(),\r\n      imgFile: null,\r\n      title: '',\r\n      description: '',\r\n      fullText: '',\r\n      sendImgFile: null,\r\n      existedPostTitles: null,\r\n    };\r\n  },\r\n  validations() {\r\n    return {\r\n      title: {\r\n        required,\r\n        minLength: minLength(5),\r\n        maxLength: maxLength(50),\r\n      },\r\n      description: { required },\r\n      fullText: {\r\n        required,\r\n        minLength: minLength(20),\r\n        maxLength: maxLength(400),\r\n      },\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    handleUpload() {\r\n      this.sendImgFile = this.imgFile;\r\n      this.imgFile = URL.createObjectURL(this.imgFile);\r\n    },\r\n\r\n    async post() {\r\n      if (this.v$.$invalid) {\r\n        this.v$.$touch();\r\n        return;\r\n      }\r\n      try {\r\n        const payload = {\r\n          title: this.title,\r\n          description: this.description,\r\n          fullText: this.fullText,\r\n        };\r\n        const postId = await this.$store.dispatch('createPost', payload);\r\n        this.$router.push({ name: 'PostDetailsView', params: { id: postId } });\r\n      } catch (error) {\r\n        showDangerMessage(error.response.data.error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n.uploader\r\n  width 100%\r\n  border 1px solid\r\n.uploader .q-field__label.no-pointer-events.absolute.ellipsis\r\n  width 100% !important\r\n  text-align center !important\r\n.newPost\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  border: 1px solid rgba(0, 0, 0, 0.24);\r\n  border-radius: 15px;\r\n  padding 0 10px\r\n  background-color #fff\r\n.postBtn\r\n  border-radius 10px\r\n  background-color #c5cae9\r\n  transition-duration .4s\r\n  color #313131\r\n  &:hover\r\n    background-color #b9b9ed\r\n    color #fff\r\n.newPostHeader\r\n  color #313131\r\n</style>\r\n","import { render } from \"./NewPostView.vue?vue&type=template&id=20581756\"\nimport script from \"./NewPostView.vue?vue&type=script&lang=js\"\nexport * from \"./NewPostView.vue?vue&type=script&lang=js\"\n\nimport \"./NewPostView.vue?vue&type=style&index=0&id=20581756&lang=stylus\"\n\nimport exportComponent from \"D:\\\\Programming\\\\Ficus\\\\Comments\\\\vue-trainee1\\\\vue-trainee\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QField from 'quasar/src/components/field/QField.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput,QBtn,QField});\n"],"names":["createComponent","name","inheritAttrs","props","useFieldProps","emits","useFieldEmits","setup","useField","useFieldState","module","exports","component","type","items","targetComponent","__vccOpts","target","i","class","_createElementVNode","_createElementBlock","_hoisted_2","_createVNode","_component_q_input","autogrow","$data","$event","label","error","title","$error","$errors","$message","description","fullText","_component_q_btn","onClick","$options","data","v$","useVuelidate","imgFile","sendImgFile","existedPostTitles","validations","required","minLength","maxLength","methods","handleUpload","this","URL","createObjectURL","async","$invalid","$touch","payload","postId","$store","dispatch","$router","push","params","id","showDangerMessage","response","__exports__","render","QInput"],"sourceRoot":""}